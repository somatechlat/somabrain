{{- if .Values.orchestrator.enabled }}
{{- $root := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "soma-apps.componentName" (dict "root" $root "component" "orchestrator") }}
  namespace: {{ $root.Values.global.namespace }}
  labels:
{{ include "soma-apps.labels" (dict "root" $root "component" "orchestrator") | indent 4 }}
spec:
  replicas: {{ .Values.orchestrator.replicaCount }}
  selector:
    matchLabels:
{{ include "soma-apps.labels" (dict "root" $root "component" "orchestrator") | indent 6 }}
  template:
    metadata:
      labels:
{{ include "soma-apps.labels" (dict "root" $root "component" "orchestrator") | indent 8 }}
    spec:
      containers:
        - name: orchestrator
          image: "{{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag }}"
          imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy | default $root.Values.global.imagePullPolicy }}
          command: ["python3"]
          args: ["-m", "somabrain.services.orchestrator_service"]
          ports:
            - containerPort: 8096
              name: health
          env:
{{- range $key, $value := $root.Values.envCommon }}
            - name: {{ $key }}
              value: "{{ $value }}"
{{- end }}
            - name: ENABLE_COG_THREADS
              value: "{{ ternary "1" "0" $root.Values.featureFlags.enableCogThreads }}"
{{- range $key, $value := .Values.orchestrator.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
{{- end }}
            - name: HEALTH_PORT
              value: "8096"
          readinessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 10
            periodSeconds: 20
{{- end }}
