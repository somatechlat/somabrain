[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "somabrain"
version = "0.2.0"
description = "SomaBrain â€” cognitive layer with WM, salience, HRR, planner, controls, and observability"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "SomaBrain Contributors" }]
keywords = ["agents", "cognition", "HRR", "FastAPI", "memory", "observability"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Framework :: FastAPI",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
  "fastapi>=0.103",
  "uvicorn>=0.22",
  "numpy>=1.24",
  "scipy>=1.14",
  "prometheus-client>=0.17",
  "httpx>=0.24",
  "requests>=2.31",
  "cachetools>=5.3",
  "psutil>=5.9",
  "redis>=4.6",
  "kafka-python>=2.0",
  "grpcio>=1.75",
  "sqlalchemy>=2.0",
  "psycopg[binary]>=3.1",
  "psycopg2-binary>=2.9",
  "cryptography>=41",
  "PyJWT[crypto]>=2.9",
  "pydantic-settings>=2.1",
  "PyYAML>=6.0",
]

[project.optional-dependencies]
controls = ["cryptography>=41"]
dev = [
  "pytest>=7",
  "pytest-cov>=4",
  "ruff>=0.5",
  "mypy>=1.5",
  "matplotlib>=3.8",
  "pyinstrument>=0.4",
  "scalene>=1.5",
  "py-spy>=0.3"
  ,"pytest-asyncio>=0.23"
  ,"PyYAML>=6.0"
  ,"fastavro>=1.9"
  ,"confluent-kafka>=2.4"
]

[project.scripts]
somabrain-api = "somabrain.cli:run_api"
somabrain-sleep = "somabrain.consolidation:main"
somabrain-journal = "somabrain.cli:journal_cli"

[tool.setuptools]
packages = { find = { where = ["."], include = ["somabrain*"], exclude = ["tests*"] } }

[tool.black]
line-length = 88
target-version = ["py310"]
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 88
combine_as_imports = true
known_first_party = ["somabrain"]
default_section = "THIRDPARTY"

[tool.ruff]
line-length = 88
target-version = "py311"
# Keep lint focused on production code; tests/benchmarks/scripts are noisy and optional
exclude = [
  "tests",
  "benchmarks",
  "scripts",
  "examples",
  "docs",
]

[tool.ruff.lint]
select = ["E", "F", "I"]
# Ignore long lines and import-order/style issues for now; focus on correctness
# Also silence common false positives in this mixed-style repo
ignore = [
  "E501", # line length
  "E402", # module import not at top (legacy try/except import patterns)
  "E702", # multiple statements per line (semi-colon)
  "I001", # import sorting
  "F401", # unused imports (common in optional submodules)
  "F811", # redefinition
  "F841", # assigned but unused
]
