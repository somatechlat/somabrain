{"openapi":"3.1.0","info":{"title":"SomaBrain - Cognitive AI System","description":"Low-latency cognitive services with strict production-mode enforcement.","version":"1"},"paths":{"/admin/services":{"get":{"summary":"List Services","operationId":"list_services_admin_services_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/admin/services/{name}":{"get":{"summary":"Service Status","operationId":"service_status_admin_services__name__get","parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/services/{name}/start":{"post":{"summary":"Service Start","operationId":"service_start_admin_services__name__start_post","parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/services/{name}/stop":{"post":{"summary":"Service Stop","operationId":"service_stop_admin_services__name__stop_post","parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/admin/services/{name}/restart":{"post":{"summary":"Service Restart","operationId":"service_restart_admin_services__name__restart_post","parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string","title":"Name"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/context/evaluate":{"post":{"summary":"Evaluate Endpoint","operationId":"evaluate_endpoint_context_evaluate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EvaluateRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EvaluateResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/context/feedback":{"post":{"summary":"Feedback Endpoint","operationId":"feedback_endpoint_context_feedback_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedbackRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedbackResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/context/adaptation/state":{"get":{"summary":"Adaptation State Endpoint","description":"Return current adaptation weights (retrieval + utility) and history length.\n\nUseful for external monitoring/tests to verify learning progress without\nmutating state. Supports per-tenant queries via ?tenant_id=X parameter.","operationId":"adaptation_state_endpoint_context_adaptation_state_get","parameters":[{"name":"tenant_id","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tenant Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AdaptationStateResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/context/adaptation/reset":{"post":{"summary":"Adaptation Reset Endpoint","description":"Reset the per-tenant adaptation engine to defaults for clean benchmarks.\n\nThis endpoint is intended for operator/benchmark use. It does not return\na model and will simply respond with a JSON status on success.","operationId":"adaptation_reset_endpoint_context_adaptation_reset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetAdaptationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/persona/{pid}":{"put":{"summary":"Put Persona","description":"Create or update a Persona record.\n\nUses optimistic CAS if the client supplies an If-Match header containing the\ncurrent ETag. Returns an ETag header for the newly stored representation.","operationId":"put_persona_persona__pid__put","parameters":[{"name":"pid","in":"path","required":true,"schema":{"type":"string","title":"Pid"}},{"name":"if-match","in":"header","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"If-Match"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Persona"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"get":{"summary":"Get Persona","description":"Retrieve the latest Persona record for pid. Returns 404 if not found.","operationId":"get_persona_persona__pid__get","parameters":[{"name":"pid","in":"path","required":true,"schema":{"type":"string","title":"Pid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"summary":"Delete Persona","description":"Append a persona tombstone for pid. Best-effort delete for Phase 1.","operationId":"delete_persona_persona__pid__delete","parameters":[{"name":"pid","in":"path","required":true,"schema":{"type":"string","title":"Pid"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/link":{"post":{"summary":"Link","description":"Create a relation (link) between two coordinates or keys.\n\nThe endpoint accepts either explicit 3D coordinates or memory keys for\nthe `from` and `to` endpoints. If keys are supplied, they are mapped to\ncoordinates via the memory service. The link type is normalized using\n`somabrain.semgraph.normalize_relation` and the optional weight is used\nwhen inserting the link.\n\nReturns a simple LinkResponse(ok=True) on success.","operationId":"link_link_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LinkResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/memory":{"get":{"tags":["config"],"summary":"Get Memory Config","operationId":"get_memory_config_config_memory_get","parameters":[{"name":"tenant","in":"query","required":false,"schema":{"type":"string","description":"Tenant id","default":"","title":"Tenant"},"description":"Tenant id"},{"name":"namespace","in":"query","required":false,"schema":{"type":"string","description":"Namespace (e.g., wm, ltm)","default":"","title":"Namespace"},"description":"Namespace (e.g., wm, ltm)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EffectiveConfigResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["config"],"summary":"Patch Memory Config","operationId":"patch_memory_config_config_memory_patch","parameters":[{"name":"tenant","in":"query","required":true,"schema":{"type":"string","description":"Tenant id","title":"Tenant"},"description":"Tenant id"},{"name":"namespace","in":"query","required":true,"schema":{"type":"string","description":"Namespace","title":"Namespace"},"description":"Namespace"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"description":"Partial config patch","title":"Payload"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/cutover/open":{"post":{"tags":["config"],"summary":"Open Cutover","operationId":"open_cutover_config_cutover_open_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/somabrain__api__config_api__CutoverOpenRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/cutover/metrics":{"post":{"tags":["config"],"summary":"Record Cutover Metrics","operationId":"record_cutover_metrics_config_cutover_metrics_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverMetricsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/cutover/approve":{"post":{"tags":["config"],"summary":"Approve Cutover","operationId":"approve_cutover_config_cutover_approve_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverTenantRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/cutover/execute":{"post":{"tags":["config"],"summary":"Execute Cutover","operationId":"execute_cutover_config_cutover_execute_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverTenantRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/config/cutover/cancel":{"post":{"tags":["config"],"summary":"Cancel Cutover","operationId":"cancel_cutover_config_cutover_cancel_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverTenantRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/remember":{"post":{"tags":["memory"],"summary":"Remember Memory","operationId":"remember_memory_memory_remember_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryWriteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryWriteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/remember/batch":{"post":{"tags":["memory"],"summary":"Remember Memory Batch","operationId":"remember_memory_batch_memory_remember_batch_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryBatchWriteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryBatchWriteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/recall":{"post":{"tags":["memory"],"summary":"Recall Memory","description":"Unified recall endpoint backed by the retrieval pipeline.\n\nAccepts either a plain string (JSON string) or an object body. For object bodies,\naccepts the legacy MemoryRecallRequest fields as well as RetrievalRequest fields.","operationId":"recall_memory_memory_recall_post","parameters":[{"name":"payload","in":"query","required":true,"schema":{"title":"Payload"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryRecallResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/recall/stream":{"post":{"tags":["memory"],"summary":"Recall Memory Stream","operationId":"recall_memory_stream_memory_recall_stream_post","parameters":[{"name":"payload","in":"query","required":true,"schema":{"title":"Payload"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryRecallResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/context/{session_id}":{"get":{"tags":["memory"],"summary":"Get Recall Session","operationId":"get_recall_session_memory_context__session_id__get","parameters":[{"name":"session_id","in":"path","required":true,"schema":{"type":"string","title":"Session Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryRecallSessionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/metrics":{"get":{"tags":["memory"],"summary":"Memory Metrics","operationId":"memory_metrics_memory_metrics_get","parameters":[{"name":"tenant","in":"query","required":true,"schema":{"type":"string","minLength":1,"title":"Tenant"}},{"name":"namespace","in":"query","required":true,"schema":{"type":"string","minLength":1,"title":"Namespace"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MemoryMetricsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/admin/rebuild-ann":{"post":{"tags":["memory"],"summary":"Rebuild Ann Indexes","operationId":"rebuild_ann_indexes_memory_admin_rebuild_ann_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnRebuildRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Rebuild Ann Indexes Memory Admin Rebuild Ann Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/cutover/open":{"post":{"tags":["memory"],"summary":"Cutover Open","operationId":"cutover_open_memory_cutover_open_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/somabrain__api__memory_api__CutoverOpenRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverPlanResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/cutover/approve":{"post":{"tags":["memory"],"summary":"Cutover Approve","operationId":"cutover_approve_memory_cutover_approve_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverActionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverPlanResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/cutover/execute":{"post":{"tags":["memory"],"summary":"Cutover Execute","operationId":"cutover_execute_memory_cutover_execute_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverActionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverPlanResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/cutover/cancel":{"post":{"tags":["memory"],"summary":"Cutover Cancel","operationId":"cutover_cancel_memory_cutover_cancel_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverActionRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Cutover Cancel Memory Cutover Cancel Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/memory/cutover/status/{tenant}":{"get":{"tags":["memory"],"summary":"Cutover Status","operationId":"cutover_status_memory_cutover_status__tenant__get","parameters":[{"name":"tenant","in":"path","required":true,"schema":{"type":"string","title":"Tenant"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CutoverPlanResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/constitution/version":{"get":{"summary":"Version","operationId":"version_constitution_version_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/constitution/validate":{"post":{"summary":"Validate","operationId":"validate_constitution_validate_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidateRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/constitution/load":{"post":{"summary":"Load Constitution","description":"Save a new constitution JSON to Redis.\n\nThe endpoint expects a raw JSON object representing the constitution.\nIt uses the shared ``ConstitutionEngine`` instance attached to ``app.state``.\nReturns the new checksum for verification.","operationId":"load_constitution_constitution_load_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Payload"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/opa/policy":{"get":{"summary":"Get Policy","description":"Return the stored OPA policy and its signature.\n\nIf no policy is stored, returns 404.","operationId":"get_policy_opa_policy_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}},"post":{"summary":"Update Policy","description":"Generate a new OPA policy from the current constitution, sign it, store it, and reload OPA.\n\nThe request body is ignored – the policy is derived from the constitution\nengine attached to the app state.","operationId":"update_policy_opa_policy_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/health":{"get":{"summary":"Health","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}},"/metrics":{"get":{"summary":"Metrics","description":"Prometheus metrics endpoint.","operationId":"metrics_metrics_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/micro/diag":{"get":{"summary":"Micro Diag","operationId":"micro_diag_micro_diag_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/reward/health":{"get":{"summary":"Reward Health","operationId":"reward_health_reward_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Reward Health Reward Health Get"}}}}}}},"/learner/health":{"get":{"summary":"Learner Health","operationId":"learner_health_learner_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Response Learner Health Learner Health Get"}}}}}}},"/reward/reward/{frame_id}":{"post":{"summary":"Post Reward Proxy","operationId":"post_reward_proxy_reward_reward__frame_id__post","parameters":[{"name":"frame_id","in":"path","required":true,"schema":{"type":"string","title":"Frame Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Body"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"object","additionalProperties":true,"title":"Response Post Reward Proxy Reward Reward  Frame Id  Post"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/recall":{"post":{"summary":"Recall","operationId":"recall_recall_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RecallRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RecallResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/remember":{"post":{"summary":"Remember","description":"Handle memory storage.\n\nThe original API expected a ``RememberRequest`` with a ``payload`` field.\nMany integration tests (and some external callers) send the payload\nfields directly at the top level (e.g. ``{\"task\": \"…\", \"content\": \"…\"}``).\nTo maintain backward compatibility we accept both shapes:\n\n* If ``payload`` is present, we treat the request as the original schema.\n* Otherwise the entire body is interpreted as the payload.","operationId":"remember_remember_post","requestBody":{"content":{"application/json":{"schema":{"additionalProperties":true,"type":"object","title":"Body"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RememberResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sleep/run":{"post":{"summary":"Sleep Run","operationId":"sleep_run_sleep_run_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SleepRunRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SleepRunResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/sleep/status":{"get":{"summary":"Sleep Status","operationId":"sleep_status_sleep_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SleepStatusResponse"}}}}}}},"/sleep/status/all":{"get":{"summary":"Sleep Status All","description":"Admin view: list sleep status for all known tenants.\n\nReturns { enabled, interval_seconds, tenants: { <tid>: {nrem, rem} } }","operationId":"sleep_status_all_sleep_status_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SleepStatusAllResponse"}}}}}}},"/plan/suggest":{"post":{"summary":"Plan Suggest","description":"Suggest a small plan derived from the semantic graph around a task key.\n\nBody: { task_key: str, max_steps?: int, rel_types?: [str], universe?: str }\nReturns: { plan: [str] }","operationId":"plan_suggest_plan_suggest_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanSuggestRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlanSuggestResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/delete":{"post":{"summary":"Delete Memory","description":"Delete a memory at the given coordinate.\n\nReturns a simple success response. Raises 404 if coordinate not found\n(handled by underlying memory client).","operationId":"delete_memory_delete_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/recall/delete":{"post":{"summary":"Recall Delete","description":"Delete a memory by coordinate via the recall API.\nMirrors the generic /delete endpoint but scoped under /recall for consistency.","operationId":"recall_delete_recall_delete_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/personality":{"post":{"summary":"Set Personality","description":"Set personality traits for the current tenant.\n\nThis endpoint accepts a JSON body with a `traits` dictionary, stores it via the\nin‑process `personality_store`, and also persists a semantic memory record so\nthat the traits survive restarts. It mirrors the legacy `/personality` POST\n\n\n\nbehaviour expected by the test suite.","operationId":"set_personality_personality_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonalityState"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonalityState"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/act":{"post":{"summary":"Act Endpoint","description":"Execute an action/task and return step results.\n\nThis simplified implementation runs a single evaluation step using the\nexisting cognitive loop service. It returns a minimal ``ActResponse``\ncompatible with the test suite (including ``task`` and a ``results`` list\ncontaining at least one ``ActStepResult`` with a ``salience`` field).","operationId":"act_endpoint_act_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/neuromodulators":{"get":{"summary":"Get Neuromodulators","operationId":"get_neuromodulators_neuromodulators_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NeuromodStateModel"}}}}}},"post":{"summary":"Set Neuromodulators","operationId":"set_neuromodulators_neuromodulators_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/NeuromodStateModel"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NeuromodStateModel"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/graph/links":{"post":{"summary":"Graph Links","operationId":"graph_links_graph_links_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GraphLinksRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GraphLinksResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/reflect":{"post":{"summary":"Reflect","operationId":"reflect_reflect_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ReflectResponse"}}}}}}},"/migrate/export":{"post":{"summary":"Migrate Export","operationId":"migrate_export_migrate_export_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateExportRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateExportResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/migrate/import":{"post":{"summary":"Migrate Import","operationId":"migrate_import_migrate_import_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateImportRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateImportResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"ActRequest":{"properties":{"task":{"type":"string","title":"Task"},"top_k":{"type":"integer","title":"Top K","default":3},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","required":["task"],"title":"ActRequest","description":"Schema for action execution requests.\n\nDefines the structure for requests to execute cognitive actions or tasks,\nwith optional universe filtering and result limiting.\n\nAttributes:\n    task (str): Description of the task or action to perform.\n    top_k (int): Number of top results to return. Default 3.\n    universe (Optional[str]): Optional universe/namespace filter.\n\nExample:\n    >>> request = ActRequest(task=\"analyze data\", top_k=10, universe=\"analysis\")"},"ActResponse":{"properties":{"task":{"type":"string","title":"Task"},"results":{"items":{"$ref":"#/components/schemas/ActStepResult"},"type":"array","title":"Results"},"plan":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Plan"},"plan_universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Plan Universe"}},"type":"object","required":["task","results"],"title":"ActResponse","description":"Schema for action execution responses.\n\nDefines the structure of responses from action execution, including step-by-step\nresults and optional planning information.\n\nAttributes:\n    task (str): Original task description.\n    results (List[ActStepResult]): List of step results from execution.\n    plan (Optional[List[str]]): Optional list of planned steps.\n    plan_universe (Optional[str]): Universe associated with the plan.\n\nExample:\n    >>> response = ActResponse(\n    ...     task=\"solve problem\",\n    ...     results=[step_result1, step_result2],\n    ...     plan=[\"step 1\", \"step 2\", \"step 3\"]\n    ... )"},"ActStepResult":{"properties":{"step":{"type":"string","title":"Step"},"novelty":{"type":"number","title":"Novelty"},"pred_error":{"type":"number","title":"Pred Error"},"salience":{"type":"number","title":"Salience"},"stored":{"type":"boolean","title":"Stored"},"wm_hits":{"type":"integer","title":"Wm Hits"},"memory_hits":{"type":"integer","title":"Memory Hits"},"policy":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Policy"}},"type":"object","required":["step","novelty","pred_error","salience","stored","wm_hits","memory_hits"],"title":"ActStepResult","description":"Schema for individual action step results.\n\nRepresents the outcome of a single step in an action execution, including\ncognitive metrics and memory operation results.\n\nAttributes:\n    step (str): Description of the action step performed.\n    novelty (float): Novelty score for this step (0.0 to 1.0).\n    pred_error (float): Prediction error for this step (0.0 to 1.0).\n    salience (float): Salience score for this step.\n    stored (bool): Whether this step was stored in memory.\n    wm_hits (int): Number of working memory hits.\n    memory_hits (int): Number of long-term memory hits.\n    policy (Optional[dict]): Optional policy decision data.\n\nExample:\n    >>> result = ActStepResult(\n    ...     step=\"processed input\",\n    ...     novelty=0.2,\n    ...     pred_error=0.1,\n    ...     salience=0.8,\n    ...     stored=True,\n    ...     wm_hits=2,\n    ...     memory_hits=5\n    ... )"},"AdaptationConstraintsState":{"properties":{"alpha_min":{"type":"number","title":"Alpha Min"},"alpha_max":{"type":"number","title":"Alpha Max"},"gamma_min":{"type":"number","title":"Gamma Min"},"gamma_max":{"type":"number","title":"Gamma Max"},"lambda_min":{"type":"number","title":"Lambda Min"},"lambda_max":{"type":"number","title":"Lambda Max"},"mu_min":{"type":"number","title":"Mu Min"},"mu_max":{"type":"number","title":"Mu Max"},"nu_min":{"type":"number","title":"Nu Min"},"nu_max":{"type":"number","title":"Nu Max"}},"type":"object","required":["alpha_min","alpha_max","gamma_min","gamma_max","lambda_min","lambda_max","mu_min","mu_max","nu_min","nu_max"],"title":"AdaptationConstraintsState"},"AdaptationGainsState":{"properties":{"alpha":{"type":"number","title":"Alpha"},"gamma":{"type":"number","title":"Gamma"},"lambda_":{"type":"number","title":"Lambda"},"mu":{"type":"number","title":"Mu"},"nu":{"type":"number","title":"Nu"}},"type":"object","required":["alpha","gamma","lambda_","mu","nu"],"title":"AdaptationGainsState"},"AdaptationStateResponse":{"properties":{"retrieval":{"$ref":"#/components/schemas/RetrievalWeightsState"},"utility":{"$ref":"#/components/schemas/UtilityWeightsState"},"history_len":{"type":"integer","title":"History Len"},"learning_rate":{"type":"number","title":"Learning Rate"},"gains":{"$ref":"#/components/schemas/AdaptationGainsState"},"constraints":{"$ref":"#/components/schemas/AdaptationConstraintsState"}},"type":"object","required":["retrieval","utility","history_len","learning_rate","gains","constraints"],"title":"AdaptationStateResponse"},"AnnRebuildRequest":{"properties":{"tenant":{"type":"string","title":"Tenant"},"namespace":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Namespace"}},"type":"object","required":["tenant"],"title":"AnnRebuildRequest"},"CutoverActionRequest":{"properties":{"tenant":{"type":"string","minLength":1,"title":"Tenant"},"reason":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reason"}},"type":"object","required":["tenant"],"title":"CutoverActionRequest"},"CutoverMetricsRequest":{"properties":{"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"top1_accuracy":{"type":"number","title":"Top1 Accuracy"},"margin":{"type":"number","title":"Margin"},"latency_p95_ms":{"type":"number","title":"Latency P95 Ms"}},"type":"object","required":["tenant","namespace","top1_accuracy","margin","latency_p95_ms"],"title":"CutoverMetricsRequest"},"CutoverPlanResponse":{"properties":{"tenant":{"type":"string","title":"Tenant"},"from_namespace":{"type":"string","title":"From Namespace"},"to_namespace":{"type":"string","title":"To Namespace"},"status":{"type":"string","title":"Status"},"ready":{"type":"boolean","title":"Ready"},"created_at":{"type":"number","title":"Created At"},"approved_at":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Approved At"},"notes":{"items":{"type":"string"},"type":"array","title":"Notes"},"last_top1_accuracy":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Last Top1 Accuracy"},"last_margin":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Last Margin"},"last_latency_p95_ms":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Last Latency P95 Ms"}},"type":"object","required":["tenant","from_namespace","to_namespace","status","ready","created_at"],"title":"CutoverPlanResponse"},"CutoverTenantRequest":{"properties":{"tenant":{"type":"string","title":"Tenant"},"reason":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reason"}},"type":"object","required":["tenant"],"title":"CutoverTenantRequest"},"DeleteRequest":{"properties":{"coordinate":{"items":{"type":"number"},"type":"array","title":"Coordinate"}},"type":"object","required":["coordinate"],"title":"DeleteRequest","description":"Schema for delete memory requests.\n\nAttributes:\n    coordinate: 3-element list representing the memory coordinate to delete."},"DeleteResponse":{"properties":{"ok":{"type":"boolean","title":"Ok","default":true}},"type":"object","title":"DeleteResponse","description":"Simple response indicating delete success.\n\nAttributes:\n    ok: True if delete operation was performed."},"EffectiveConfigResponse":{"properties":{"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"config":{"additionalProperties":true,"type":"object","title":"Config"}},"type":"object","required":["tenant","namespace","config"],"title":"EffectiveConfigResponse"},"EvaluateRequest":{"properties":{"session_id":{"type":"string","title":"Session Id"},"query":{"type":"string","title":"Query"},"top_k":{"type":"integer","maximum":50.0,"minimum":1.0,"title":"Top K","default":5},"tenant_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tenant Id"}},"type":"object","required":["session_id","query"],"title":"EvaluateRequest"},"EvaluateResponse":{"properties":{"query":{"type":"string","title":"Query"},"prompt":{"type":"string","title":"Prompt"},"tenant_id":{"type":"string","title":"Tenant Id"},"memories":{"items":{"$ref":"#/components/schemas/MemoryItem"},"type":"array","title":"Memories"},"weights":{"items":{"type":"number"},"type":"array","title":"Weights"},"residual_vector":{"items":{"type":"number"},"type":"array","title":"Residual Vector"},"working_memory":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Working Memory"},"constitution_checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Constitution Checksum"}},"type":"object","required":["query","prompt","tenant_id","memories","weights","residual_vector","working_memory"],"title":"EvaluateResponse"},"FeedbackRequest":{"properties":{"session_id":{"type":"string","title":"Session Id"},"query":{"type":"string","title":"Query"},"prompt":{"type":"string","title":"Prompt"},"response_text":{"type":"string","title":"Response Text"},"utility":{"type":"number","title":"Utility"},"reward":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Reward"},"metadata":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Metadata"},"tenant_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tenant Id"}},"type":"object","required":["session_id","query","prompt","response_text","utility"],"title":"FeedbackRequest"},"FeedbackResponse":{"properties":{"accepted":{"type":"boolean","title":"Accepted"},"adaptation_applied":{"type":"boolean","title":"Adaptation Applied"}},"type":"object","required":["accepted","adaptation_applied"],"title":"FeedbackResponse"},"GraphLinksRequest":{"properties":{"from_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"From Key"},"from_coord":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"From Coord"},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"limit":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Limit","default":50},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","title":"GraphLinksRequest"},"GraphLinksResponse":{"properties":{"edges":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Edges"},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","required":["edges"],"title":"GraphLinksResponse"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HealthResponse":{"properties":{"ok":{"type":"boolean","title":"Ok"},"components":{"additionalProperties":true,"type":"object","title":"Components"},"namespace":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Namespace"},"trace_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Trace Id"},"deadline_ms":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Deadline Ms"},"idempotency_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Idempotency Key"},"constitution_version":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Constitution Version"},"constitution_status":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Constitution Status"},"minimal_public_api":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Minimal Public Api"},"external_backends_required":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"External Backends Required"},"predictor_provider":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Predictor Provider"},"full_stack":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Full Stack"},"embedder":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Embedder"},"stub_counts":{"anyOf":[{"additionalProperties":{"type":"integer"},"type":"object"},{"type":"null"}],"title":"Stub Counts"},"ready":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Ready"},"memory_items":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Memory Items"},"predictor_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Predictor Ok"},"memory_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Memory Ok"},"embedder_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Embedder Ok"},"retrieval_ready":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Retrieval Ready"},"opa_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Opa Ok"},"opa_required":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Opa Required"},"kafka_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Kafka Ok"},"postgres_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Postgres Ok"},"metrics_ready":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Metrics Ready"},"metrics_required":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Metrics Required"},"alerts":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Alerts"},"memory_circuit_open":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Memory Circuit Open"},"fd_trace_norm_error":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Fd Trace Norm Error"},"fd_psd_ok":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Fd Psd Ok"},"fd_capture_ratio":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Fd Capture Ratio"},"scorer":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Scorer"}},"type":"object","required":["ok","components"],"title":"HealthResponse","description":"Schema for system health check responses.\n\nProvides a simple health status response with component-level status information\nfor monitoring the system's operational state.\n\nAttributes:\n    ok (bool): Overall system health status.\n    components (dict): Dictionary of component names to their status information.\n\nExample:\n    >>> response = HealthResponse(\n    ...     ok=True,\n    ...     components={\"memory\": \"healthy\", \"wm\": \"healthy\", \"api\": \"healthy\"}\n    ... )"},"LinkRequest":{"properties":{"from_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"From Key"},"to_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"To Key"},"from_coord":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"From Coord"},"to_coord":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"To Coord"},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"weight":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Weight","default":1.0},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","title":"LinkRequest"},"LinkResponse":{"properties":{"ok":{"type":"boolean","title":"Ok"}},"type":"object","required":["ok"],"title":"LinkResponse"},"MemoryAttachment":{"properties":{"kind":{"type":"string","title":"Kind","description":"Attachment type identifier"},"uri":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Uri","description":"External location reference"},"content_type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Content Type","description":"MIME type for the attachment"},"checksum":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Checksum","description":"Integrity checksum for validation"},"data":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Data","description":"Inline base64-encoded payload; use sparingly for small blobs"},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta","description":"Attachment metadata annotations"}},"type":"object","required":["kind"],"title":"MemoryAttachment"},"MemoryBatchWriteItem":{"properties":{"key":{"type":"string","minLength":1,"title":"Key"},"value":{"additionalProperties":true,"type":"object","title":"Value","description":"Payload stored in memory"},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta","description":"Optional metadata"},"ttl_seconds":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Ttl Seconds","description":"TTL override for this item"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","description":"Optional tags"},"policy_tags":{"items":{"type":"string"},"type":"array","title":"Policy Tags","description":"Policy tags"},"attachments":{"items":{"$ref":"#/components/schemas/MemoryAttachment"},"type":"array","title":"Attachments"},"links":{"items":{"$ref":"#/components/schemas/MemoryLink"},"type":"array","title":"Links"},"signals":{"anyOf":[{"$ref":"#/components/schemas/MemorySignalPayload"},{"type":"null"}]},"importance":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Importance"},"novelty":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Novelty"},"trace_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Trace Id"},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","required":["key","value"],"title":"MemoryBatchWriteItem"},"MemoryBatchWriteRequest":{"properties":{"tenant":{"type":"string","minLength":1,"title":"Tenant"},"namespace":{"type":"string","minLength":1,"title":"Namespace"},"items":{"items":{"$ref":"#/components/schemas/MemoryBatchWriteItem"},"type":"array","minItems":1,"title":"Items","description":"Batch of memories to persist"},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe","description":"Default universe applied when items omit universe; item value wins"}},"type":"object","required":["tenant","namespace","items"],"title":"MemoryBatchWriteRequest"},"MemoryBatchWriteResponse":{"properties":{"ok":{"type":"boolean","title":"Ok"},"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"results":{"items":{"$ref":"#/components/schemas/MemoryBatchWriteResult"},"type":"array","title":"Results"},"breaker_open":{"type":"boolean","title":"Breaker Open","default":false},"queued":{"type":"integer","title":"Queued","default":0}},"type":"object","required":["ok","tenant","namespace","results"],"title":"MemoryBatchWriteResponse"},"MemoryBatchWriteResult":{"properties":{"key":{"type":"string","title":"Key"},"coordinate":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"title":"Coordinate"},"promoted_to_wm":{"type":"boolean","title":"Promoted To Wm","default":false},"persisted_to_ltm":{"type":"boolean","title":"Persisted To Ltm","default":false},"deduplicated":{"type":"boolean","title":"Deduplicated","default":false},"importance":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Importance"},"novelty":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Novelty"},"ttl_applied":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Ttl Applied"},"trace_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Trace Id"},"request_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Request Id"},"warnings":{"items":{"type":"string"},"type":"array","title":"Warnings"},"signals":{"anyOf":[{"$ref":"#/components/schemas/MemorySignalFeedback"},{"type":"null"}]}},"type":"object","required":["key"],"title":"MemoryBatchWriteResult"},"MemoryItem":{"properties":{"id":{"type":"string","title":"Id"},"score":{"type":"number","title":"Score"},"metadata":{"additionalProperties":true,"type":"object","title":"Metadata"},"embedding":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"title":"Embedding"}},"type":"object","required":["id","score","metadata"],"title":"MemoryItem"},"MemoryLink":{"properties":{"rel":{"type":"string","title":"Rel","description":"Relationship descriptor (e.g. causes, follows)"},"target":{"type":"string","title":"Target","description":"Target memory key or URI"},"weight":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Weight","description":"Optional link strength"},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta","description":"Additional link metadata"}},"type":"object","required":["rel","target"],"title":"MemoryLink"},"MemoryMetricsResponse":{"properties":{"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"wm_items":{"type":"integer","title":"Wm Items"},"circuit_open":{"type":"boolean","title":"Circuit Open"},"outbox_pending":{"type":"integer","title":"Outbox Pending"}},"type":"object","required":["tenant","namespace","wm_items","circuit_open","outbox_pending"],"title":"MemoryMetricsResponse"},"MemoryRecallItem":{"properties":{"layer":{"type":"string","title":"Layer"},"score":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Score"},"payload":{"additionalProperties":true,"type":"object","title":"Payload"},"coordinate":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"title":"Coordinate"},"source":{"type":"string","title":"Source"},"confidence":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Confidence","description":"Confidence score derived from backend metrics"},"novelty":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Novelty","description":"Novelty indicator relative to session history"},"affinity":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Affinity","description":"Affinity to current conversation or goal state"}},"type":"object","required":["layer","payload","source"],"title":"MemoryRecallItem"},"MemoryRecallResponse":{"properties":{"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"results":{"items":{"$ref":"#/components/schemas/MemoryRecallItem"},"type":"array","title":"Results"},"wm_hits":{"type":"integer","title":"Wm Hits"},"ltm_hits":{"type":"integer","title":"Ltm Hits"},"duration_ms":{"type":"number","title":"Duration Ms"},"session_id":{"type":"string","title":"Session Id"},"scoring_mode":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Scoring Mode"},"chunk_index":{"type":"integer","title":"Chunk Index","default":0},"has_more":{"type":"boolean","title":"Has More","default":false},"total_results":{"type":"integer","title":"Total Results"},"chunk_size":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Chunk Size"},"conversation_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Conversation Id"}},"type":"object","required":["tenant","namespace","results","wm_hits","ltm_hits","duration_ms","session_id","total_results"],"title":"MemoryRecallResponse"},"MemoryRecallSessionResponse":{"properties":{"session_id":{"type":"string","title":"Session Id"},"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"scoring_mode":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Scoring Mode"},"conversation_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Conversation Id"},"created_at":{"type":"number","title":"Created At"},"results":{"items":{"$ref":"#/components/schemas/MemoryRecallItem"},"type":"array","title":"Results"}},"type":"object","required":["session_id","tenant","namespace","scoring_mode","conversation_id","created_at","results"],"title":"MemoryRecallSessionResponse"},"MemorySignalFeedback":{"properties":{"importance":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Importance"},"novelty":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Novelty"},"ttl_seconds":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Ttl Seconds","description":"Applied ttl in seconds"},"reinforcement":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reinforcement"},"recall_bias":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Recall Bias"},"promoted_to_wm":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Promoted To Wm"},"persisted_to_ltm":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Persisted To Ltm"}},"type":"object","title":"MemorySignalFeedback"},"MemorySignalPayload":{"properties":{"importance":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Importance","description":"Relative importance weight"},"novelty":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Novelty","description":"Novelty score from agent"},"ttl_seconds":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Ttl Seconds","description":"Soft time-to-live for cleanup"},"reinforcement":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Reinforcement","description":"Working-memory reinforcement hint (e.g. boost, suppress)"},"recall_bias":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Recall Bias","description":"Preferred recall strategy (explore, exploit, balanced, etc.)"}},"type":"object","title":"MemorySignalPayload"},"MemoryWriteRequest":{"properties":{"tenant":{"type":"string","minLength":1,"title":"Tenant","description":"Tenant identifier"},"namespace":{"type":"string","minLength":1,"title":"Namespace","description":"Logical namespace (e.g. wm, ltm)"},"key":{"type":"string","minLength":1,"title":"Key","description":"Stable key used to derive coordinates"},"value":{"additionalProperties":true,"type":"object","title":"Value","description":"Payload stored in memory"},"meta":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Meta","description":"Optional metadata blended into the stored payload"},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe","description":"Universe scope forwarded to the memory backend"},"ttl_seconds":{"anyOf":[{"type":"integer","minimum":0.0},{"type":"null"}],"title":"Ttl Seconds","description":"Desired time-to-live hint for automatic cleanup"},"tags":{"items":{"type":"string"},"type":"array","title":"Tags","description":"Arbitrary agent-supplied tags"},"policy_tags":{"items":{"type":"string"},"type":"array","title":"Policy Tags","description":"Policy or governance tags for this memory"},"attachments":{"items":{"$ref":"#/components/schemas/MemoryAttachment"},"type":"array","title":"Attachments","description":"Optional attachment descriptors"},"links":{"items":{"$ref":"#/components/schemas/MemoryLink"},"type":"array","title":"Links","description":"Optional outbound links to existing memories"},"signals":{"anyOf":[{"$ref":"#/components/schemas/MemorySignalPayload"},{"type":"null"}],"description":"Agent-provided signals guiding storage priorities"},"importance":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Importance","description":"Shortcut for signals.importance"},"novelty":{"anyOf":[{"type":"number","minimum":0.0},{"type":"null"}],"title":"Novelty","description":"Shortcut for signals.novelty"},"trace_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Trace Id","description":"Agent correlation identifier for downstream observability"}},"type":"object","required":["tenant","namespace","key","value"],"title":"MemoryWriteRequest"},"MemoryWriteResponse":{"properties":{"ok":{"type":"boolean","title":"Ok"},"tenant":{"type":"string","title":"Tenant"},"namespace":{"type":"string","title":"Namespace"},"coordinate":{"anyOf":[{"items":{"type":"number"},"type":"array"},{"type":"null"}],"title":"Coordinate"},"queued":{"type":"boolean","title":"Queued","default":false},"breaker_open":{"type":"boolean","title":"Breaker Open","default":false},"promoted_to_wm":{"type":"boolean","title":"Promoted To Wm","default":false},"persisted_to_ltm":{"type":"boolean","title":"Persisted To Ltm","default":false},"deduplicated":{"type":"boolean","title":"Deduplicated","default":false},"importance":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Importance"},"novelty":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Novelty"},"ttl_applied":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Ttl Applied"},"trace_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Trace Id"},"request_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Request Id"},"warnings":{"items":{"type":"string"},"type":"array","title":"Warnings"},"signals":{"anyOf":[{"$ref":"#/components/schemas/MemorySignalFeedback"},{"type":"null"}]}},"type":"object","required":["ok","tenant","namespace"],"title":"MemoryWriteResponse"},"MigrateExportRequest":{"properties":{"include_wm":{"type":"boolean","title":"Include Wm","default":true},"wm_limit":{"type":"integer","title":"Wm Limit","default":128}},"type":"object","title":"MigrateExportRequest","description":"Schema for data export requests.\n\nDefines parameters for exporting system data including memories and working memory\nfor backup, migration, or analysis purposes.\n\nAttributes:\n    include_wm (bool): Whether to include working memory in export. Default True.\n    wm_limit (int): Maximum number of working memory items to export. Default 128.\n\nExample:\n    >>> request = MigrateExportRequest(include_wm=True, wm_limit=256)"},"MigrateExportResponse":{"properties":{"manifest":{"additionalProperties":true,"type":"object","title":"Manifest"},"memories":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Memories"},"wm":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Wm","default":[]}},"type":"object","required":["manifest","memories"],"title":"MigrateExportResponse","description":"Schema for export operation responses.\n\nContains the exported data including manifest, memories, and working memory items.\n\nAttributes:\n    manifest (dict): Metadata about the export operation.\n    memories (list[dict]): List of exported memory items.\n    wm (list[dict]): List of exported working memory items. Default empty.\n\nExample:\n    >>> response = MigrateExportResponse(\n    ...     manifest={\"version\": \"1.0\", \"timestamp\": 1234567890},\n    ...     memories=[memory1, memory2],\n    ...     wm=[wm_item1, wm_item2]\n    ... )"},"MigrateImportRequest":{"properties":{"manifest":{"additionalProperties":true,"type":"object","title":"Manifest"},"memories":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Memories"},"wm":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Wm","default":[]},"replace":{"type":"boolean","title":"Replace","default":false}},"type":"object","required":["manifest","memories"],"title":"MigrateImportRequest","description":"Schema for data import requests.\n\nDefines the structure for importing previously exported data back into the system,\nwith options for replacement or merging.\n\nAttributes:\n    manifest (dict): Metadata from the export operation.\n    memories (list[dict]): List of memory items to import.\n    wm (list[dict]): List of working memory items to import. Default empty.\n    replace (bool): Whether to replace existing data or merge. Default False.\n\nExample:\n    >>> request = MigrateImportRequest(\n    ...     manifest={\"version\": \"1.0\"},\n    ...     memories=[memory1, memory2],\n    ...     wm=[wm_item1],\n    ...     replace=False\n    ... )"},"MigrateImportResponse":{"properties":{"imported":{"type":"integer","title":"Imported"},"wm_warmed":{"type":"integer","title":"Wm Warmed"}},"type":"object","required":["imported","wm_warmed"],"title":"MigrateImportResponse"},"NeuromodStateModel":{"properties":{"dopamine":{"type":"number","title":"Dopamine","default":0.4},"serotonin":{"type":"number","title":"Serotonin","default":0.5},"noradrenaline":{"type":"number","title":"Noradrenaline","default":0.0},"acetylcholine":{"type":"number","title":"Acetylcholine","default":0.0}},"type":"object","title":"NeuromodStateModel","description":"Schema for neuromodulator state representation.\n\nRepresents the current levels of key neuromodulators in the cognitive system,\nused for API serialization and state monitoring.\n\nAttributes:\n    dopamine (float): Dopamine level (0.0 to 1.0). Default 0.4.\n    serotonin (float): Serotonin level (0.0 to 1.0). Default 0.5.\n    noradrenaline (float): Noradrenaline level (0.0 to 1.0). Default 0.0.\n    acetylcholine (float): Acetylcholine level (0.0 to 1.0). Default 0.0.\n\nExample:\n    >>> state = NeuromodStateModel(\n    ...     dopamine=0.6,\n    ...     serotonin=0.7,\n    ...     noradrenaline=0.1,\n    ...     acetylcholine=0.2\n    ... )"},"Persona":{"properties":{"id":{"type":"string","title":"Id"},"display_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Display Name"},"properties":{"additionalProperties":true,"type":"object","title":"Properties","default":{}},"fact":{"type":"string","title":"Fact","default":"persona"}},"type":"object","required":["id"],"title":"Persona","description":"Persona record schema used by the Persona endpoints.\n\nAttributes:\n    id: identifier for the persona (path param)\n    display_name: optional human-readable name\n    properties: arbitrary dict with persona data\n    fact: metadata field set to 'persona' when persisted"},"PersonalityState":{"properties":{"traits":{"additionalProperties":true,"type":"object","title":"Traits","default":{}}},"type":"object","title":"PersonalityState","description":"Schema for personality trait states.\n\nRepresents the current state of personality traits in the cognitive system.\nThis is a placeholder structure that can be extended with specific trait models.\n\nAttributes:\n    traits (dict[str, Any]): Dictionary of personality trait names to their values.\n                            Default empty dict.\n\nExample:\n    >>> state = PersonalityState(traits={\"openness\": 0.8, \"conscientiousness\": 0.6})"},"PlanSuggestRequest":{"properties":{"task_key":{"type":"string","title":"Task Key"},"max_steps":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Max Steps"},"rel_types":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":"null"}],"title":"Rel Types"},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","required":["task_key"],"title":"PlanSuggestRequest"},"PlanSuggestResponse":{"properties":{"plan":{"items":{"type":"string"},"type":"array","title":"Plan"}},"type":"object","required":["plan"],"title":"PlanSuggestResponse"},"RecallRequest":{"properties":{"query":{"type":"string","title":"Query"},"top_k":{"type":"integer","title":"Top K","default":3},"universe":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Universe"}},"type":"object","required":["query"],"title":"RecallRequest","description":"Schema for memory recall API requests.\n\nDefines the structure for requests to retrieve memories from the cognitive system\nbased on a query string with optional filtering and ranking parameters.\n\nAttributes:\n    query (str): Search query string for memory retrieval.\n    top_k (int): Number of top similar memories to return. Default 3.\n    universe (Optional[str]): Optional universe/namespace filter for memories.\n\nExample:\n    >>> request = RecallRequest(query=\"machine learning\", top_k=5, universe=\"research\")"},"RecallResponse":{"properties":{"wm":{"items":{"$ref":"#/components/schemas/WMHit"},"type":"array","title":"Wm"},"memory":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Memory"},"namespace":{"type":"string","title":"Namespace"},"trace_id":{"type":"string","title":"Trace Id"},"deadline_ms":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Deadline Ms"},"idempotency_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Idempotency Key"},"reality":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Reality"},"drift":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Drift"},"hrr_cleanup":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Hrr Cleanup"},"results":{"items":{"additionalProperties":true,"type":"object"},"type":"array","title":"Results","default":[]}},"type":"object","required":["wm","memory","namespace","trace_id"],"title":"RecallResponse","description":"Canonical response model for the /recall endpoint.\n\nFields mirror what the runtime returns in `app.recall` so OpenAPI is accurate.\nTimestamp-bearing fields (e.g. ``payload.timestamp``) are normalized to Unix\nepoch seconds (float) for consistency."},"ReflectResponse":{"properties":{"created":{"type":"integer","title":"Created"},"summaries":{"items":{"type":"string"},"type":"array","title":"Summaries"}},"type":"object","required":["created","summaries"],"title":"ReflectResponse"},"RememberResponse":{"properties":{"ok":{"type":"boolean","title":"Ok"},"success":{"type":"boolean","title":"Success"},"namespace":{"type":"string","title":"Namespace"},"trace_id":{"type":"string","title":"Trace Id"},"deadline_ms":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Deadline Ms"},"idempotency_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Idempotency Key"},"breaker_open":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Breaker Open"},"queued":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Queued"}},"type":"object","required":["ok","success","namespace","trace_id"],"title":"RememberResponse","description":"Canonical response model for the /remember endpoint.\n\nMirrors the ad-hoc dict returned by the runtime so docs and OpenAPI are precise."},"ResetAdaptationRequest":{"properties":{"tenant_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tenant Id"},"base_lr":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Base Lr"},"reset_history":{"type":"boolean","title":"Reset History","default":true},"retrieval_defaults":{"anyOf":[{"$ref":"#/components/schemas/RetrievalWeightsState"},{"type":"null"}]},"utility_defaults":{"anyOf":[{"$ref":"#/components/schemas/UtilityWeightsState"},{"type":"null"}]},"gains":{"anyOf":[{"$ref":"#/components/schemas/AdaptationGainsState"},{"type":"null"}]},"constraints":{"anyOf":[{"$ref":"#/components/schemas/AdaptationConstraintsState"},{"type":"null"}]}},"type":"object","title":"ResetAdaptationRequest"},"RetrievalWeightsState":{"properties":{"alpha":{"type":"number","title":"Alpha"},"beta":{"type":"number","title":"Beta"},"gamma":{"type":"number","title":"Gamma"},"tau":{"type":"number","title":"Tau"}},"type":"object","required":["alpha","beta","gamma","tau"],"title":"RetrievalWeightsState"},"SleepRunRequest":{"properties":{"nrem":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Nrem","default":true},"rem":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Rem","default":true}},"type":"object","title":"SleepRunRequest"},"SleepRunResponse":{"properties":{"ok":{"type":"boolean","title":"Ok","description":"Whether the sleep run started successfully"},"run_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Run Id","description":"Identifier for the initiated sleep run"},"started_at_ms":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Started At Ms","description":"Epoch ms when the run started"},"mode":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Mode","description":"Sleep mode executed, e.g. 'nrem' or 'rem'"},"details":{"anyOf":[{"additionalProperties":true,"type":"object"},{"type":"null"}],"title":"Details","description":"Optional additional runtime details"}},"type":"object","required":["ok"],"title":"SleepRunResponse"},"SleepStatusAllResponse":{"properties":{"enabled":{"type":"boolean","title":"Enabled"},"interval_seconds":{"type":"integer","title":"Interval Seconds"},"tenants":{"additionalProperties":{"additionalProperties":{"anyOf":[{"type":"number"},{"type":"null"}]},"type":"object"},"type":"object","title":"Tenants"}},"type":"object","required":["enabled","interval_seconds","tenants"],"title":"SleepStatusAllResponse"},"SleepStatusResponse":{"properties":{"enabled":{"type":"boolean","title":"Enabled"},"interval_seconds":{"type":"integer","title":"Interval Seconds"},"last":{"additionalProperties":{"anyOf":[{"type":"number"},{"type":"null"}]},"type":"object","title":"Last"}},"type":"object","required":["enabled","interval_seconds","last"],"title":"SleepStatusResponse"},"UtilityWeightsState":{"properties":{"lambda_":{"type":"number","title":"Lambda"},"mu":{"type":"number","title":"Mu"},"nu":{"type":"number","title":"Nu"}},"type":"object","required":["lambda_","mu","nu"],"title":"UtilityWeightsState"},"ValidateRequest":{"properties":{"input":{"additionalProperties":true,"type":"object","title":"Input"}},"type":"object","required":["input"],"title":"ValidateRequest"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WMHit":{"properties":{"score":{"type":"number","title":"Score"},"payload":{"additionalProperties":true,"type":"object","title":"Payload"}},"type":"object","required":["score","payload"],"title":"WMHit"},"somabrain__api__config_api__CutoverOpenRequest":{"properties":{"tenant":{"type":"string","title":"Tenant"},"from_namespace":{"type":"string","title":"From Namespace"},"to_namespace":{"type":"string","title":"To Namespace"}},"type":"object","required":["tenant","from_namespace","to_namespace"],"title":"CutoverOpenRequest"},"somabrain__api__memory_api__CutoverOpenRequest":{"properties":{"tenant":{"type":"string","minLength":1,"title":"Tenant"},"from_namespace":{"type":"string","minLength":1,"title":"From Namespace"},"to_namespace":{"type":"string","minLength":1,"title":"To Namespace"}},"type":"object","required":["tenant","from_namespace","to_namespace"],"title":"CutoverOpenRequest"}}}}