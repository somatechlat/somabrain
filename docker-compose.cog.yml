# Optional overlay for cognitive-thread predictor services
# Usage:
#   docker compose -f docker-compose.yml -f docker-compose.cog.yml up -d --build \
#     somabrain_predictor_state somabrain_predictor_agent somabrain_predictor_action

services:
  somabrain_predictor_state:
    image: somabrain:latest
    restart: unless-stopped
    depends_on:
      somabrain_kafka:
        condition: service_healthy
    networks:
      - somabrain_net
    environment:
      ENABLE_COG_THREADS: "1"
      SOMABRAIN_DEFAULT_TENANT: "sandbox"
      SOMABRAIN_KAFKA_URL: "${SOMABRAIN_KAFKA_URL}"
      HEALTH_PORT: 8093
    command: ["python", "services/predictor-state/main.py"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8093/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5

  somabrain_predictor_agent:
    image: somabrain:latest
    restart: unless-stopped
    depends_on:
      somabrain_kafka:
        condition: service_healthy
    networks:
      - somabrain_net
    environment:
      ENABLE_COG_THREADS: "1"
      SOMABRAIN_DEFAULT_TENANT: "sandbox"
      SOMABRAIN_KAFKA_URL: "${SOMABRAIN_KAFKA_URL}"
      HEALTH_PORT: 8094
    command: ["python", "services/predictor-agent/main.py"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8094/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5

  somabrain_predictor_action:
    image: somabrain:latest
    restart: unless-stopped
    depends_on:
      somabrain_kafka:
        condition: service_healthy
    networks:
      - somabrain_net
    environment:
      ENABLE_COG_THREADS: "1"
      SOMABRAIN_DEFAULT_TENANT: "sandbox"
      SOMABRAIN_KAFKA_URL: "${SOMABRAIN_KAFKA_URL}"
      HEALTH_PORT: 8095
    command: ["python", "services/predictor-action/main.py"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8095/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5


